name: CI Backend

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test_backend:
    name: Unit tests (backend)
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: area_test
        ports:
          - "5432:5432"
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: backend
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/area_test
      JWT_SECRET: test-jwt-secret-key-for-ci
      TOKENS_ENC_KEY: test-tokens-encryption-key-for-ci
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: backend/package.json

      - name: Install dependencies
        run: npm i

      - name: Prepare database schema (Prisma db push)
        run: npx prisma db push --accept-data-loss

      - name: Run unit tests
        run: npm test --silent

  build_backend:
    name: Build (backend)
    runs-on: ubuntu-latest
    #needs: test_backend
    if: |
      (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')) ||
      (github.event_name == 'pull_request' && (github.base_ref == 'main' || github.base_ref == 'dev'))
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: backend/package.json

      - name: Install dependencies
        run: npm i

      - name: Build
        run: npm run build

  test_mobile:
    name: Unit tests (mobile)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mobile
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: mobile/package.json

      - name: Install dependencies
        run: npm i

      - name: Run unit tests (jest-expo)
        run: npm test --silent

  build_mobile:
    name: Build (mobile)
    runs-on: ubuntu-latest
    #needs: test_mobile
    if: |
      (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')) ||
      (github.event_name == 'pull_request' && (github.base_ref == 'main' || github.base_ref == 'dev'))
    defaults:
      run:
        working-directory: mobile
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: mobile/package.json

      - name: Install dependencies
        run: npm i

      - name: Build (Expo export for Android bundle)
        env:
          CI: true
        run: npx expo export --platform android --output-dir dist-android

  build_web:
    name: Build (frontend)
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')) ||
      (github.event_name == 'pull_request' && (github.base_ref == 'main' || github.base_ref == 'dev'))
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package.json

      - name: Install dependencies
        run: npm i

      - name: Build
        run: npm run build
